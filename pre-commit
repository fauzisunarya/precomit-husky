#!/bin/bash

# Function to check for hardcoded URLs and form inputs in Cypress test files
check_hardcoded_inputs() {
  local file=$1
#   local patterns=("cy\.(visit|get\([^)]+\).type|request|intercept)\([^)]+\)")
  local patterns=("cy\.visit\(['\"][^'\"]+['\"]\)"
                  "cy\.get\(['\"][^'\"]+['\"]\)\.type\(['\"][^'\"]+['\"]\)"
                  "cy\.request\(['\"][^'\"]+['\"]\)"
                  "cy\.intercept\(['\"][^'\"]+['\"]\)")

  for pattern in "${patterns[@]}"; do
    local match=$(grep -E "$pattern" "$file")
    if [ -n "$match" ]; then
      echo "Hardcoded value found in file: $file"
      echo "$match"
      return 1
    fi
  done
  return 0
}

# Get a list of modified files
MODIFIED_FILES=$(git diff --cached --name-only --diff-filter=AM)

# Filter for Cypress test files
CYPRESS_FILES=$(echo "$MODIFIED_FILES" | grep -E '\.(cy\.js)$' | grep 'cypress')

# Filter for files supported by Prettier
PRETTIER_FILES=$(echo "$MODIFIED_FILES" | grep -E '\.(js|jsx|ts|tsx|json|css|scss|md)$')

# Exit early if no relevant files were modified
if [ -z "$CYPRESS_FILES" ] && [ -z "$PRETTIER_FILES" ]; then
  exit 0
fi

# Flag to track if there are any violations
VIOLATION_FOUND=0

# Check each modified Cypress test file for hardcoded inputs
for file in $CYPRESS_FILES; do
  check_hardcoded_inputs "$file" || VIOLATION_FOUND=1
done

# Run Prettier on the modified files
if [ -n "$PRETTIER_FILES" ]; then
  echo "Running Prettier to format files..."
  npx prettier --write $PRETTIER_FILES
  PRETTIER_EXIT_CODE=$?
  if [ $PRETTIER_EXIT_CODE -ne 0 ]; then
    echo "Prettier failed to format some files. Please fix them and try again."
    exit $PRETTIER_EXIT_CODE
  fi

  # Stage the formatted files
  echo "Staging formatted files..."
  echo "$PRETTIER_FILES" | xargs git add
fi

# Filter for Cypress test files
CYPRESS_FILES=$(echo "$MODIFIED_FILES" | grep -E '\.(cy\.js)$' | grep 'cypress')

# Run Cypress tests on modified files
if [ -n "$CYPRESS_FILES" ]; then
  echo "Running Cypress tests on modified files..."
  for file in $CYPRESS_FILES; do
    npx cypress run --spec "$file"
    CYPRESS_EXIT_CODE=$?
    if [ $CYPRESS_EXIT_CODE -ne 0 ]; then
      echo "Cypress tests failed. Please fix them and try again."
      exit $CYPRESS_EXIT_CODE
    fi
  done
fi

# If there are violations, exit with error code
if [ $VIOLATION_FOUND -ne 0 ]; then
  echo "Please use variables for all URLs and input values in Cypress tests."
  exit 1
fi

# If everything is okay, exit with code 0
exit 0
